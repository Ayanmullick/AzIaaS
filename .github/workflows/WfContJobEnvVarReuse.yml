name: WfContJobEnvVarReuse
on: [workflow_dispatch]

jobs:
  set-env-variable:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/azure-powershell:latest
    outputs:
      env_vars: ${{ steps.set-env.outputs.Env_Vars }}
    steps:
      - uses: actions/checkout@v4  
      - name: Set environment variables
        id: set-env
        shell: pwsh
        run: |
            . ./3TierApp/HelperFunctions.ps1  
            Connect-MySubscription ${{ vars.MULLICKTENANTID }} ${{ vars.FTESUBID }} ${{ vars.PSGHACTIONSCLIENTID }} ${{ secrets.PSGHACTIONSSECRET }}
            $RG_NAME = (Get-AzResourceGroup -Name GitHubAction24).ResourceGroupName               #Fetching the Resource Group Name
            $EnvVars = @{"RG_NAME" = $RG_NAME; "SA_NAME" = 'tieredsa'; "LAW_NAME" = 'TieredLAW';"NSG_NAME" = 'TieredNSG';"VNET_NAME" = 'TieredVnet';"ID" = 'TieredUAI'}
            $JsonEnvVars = $envVars | ConvertTo-Json -Compress                                    #Converting the hashtable to JSON. Fails if -Compress is not used
            Write-Output "env_vars=$jsonEnvVars" >> $Env:GITHUB_OUTPUT
            Write-Output '-------------------------------------------------------------------------------'
            Get-Content -Path $Env:GITHUB_ENV
            Write-Output '-------------------------------------------------------------------------------'
            Get-ChildItem env:
            Write-Output "Using resource group: $RG_NAME"

  use-env-variable:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/azure-powershell:latest
    needs: set-env-variable
    steps:
      - name: Use environment variables in Azure PowerShell
        shell: pwsh
        run: |
            $EnvVars = ConvertFrom-Json '${{ needs.set-env-variable.outputs.Env_Vars }}'
            Write-Output "Using resource group: $($envVars.RG_NAME)"
            Write-Output "Using storage account: $($envVars.SA_NAME)"
            Write-Output "Using log analytics workspace: $($envVars.LAW_NAME)"
            Write-Output "Using network security group: $($envVars.NSG_NAME)"
            Write-Output "Using virtual network: $($envVars.VNET_NAME)"
            Write-Output "Using identity: $($envVars.ID)"
